0 info it worked if it ends with ok
1 verbose cli [ '/Users/josephditton/.nvm/versions/node/v7.5.0/bin/node',
1 verbose cli   '/Users/josephditton/.nvm/versions/node/v7.5.0/bin/npm',
1 verbose cli   'publish' ]
2 info using npm@4.1.2
3 info using node@v7.5.0
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   escapedName: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/Users/josephditton/Documents/Atomic/dangerously-atomic-html',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /Users/josephditton/.npm/dangerously-atomic-html/1.0.0/package.tgz not in flight; packing
9 verbose correctMkdir /Users/josephditton/.npm correctMkdir not in flight; initializing
10 info lifecycle dangerously-atomic-html@1.0.0~prepublish: dangerously-atomic-html@1.0.0
11 silly lifecycle dangerously-atomic-html@1.0.0~prepublish: no script for prepublish, continuing
12 info lifecycle dangerously-atomic-html@1.0.0~prepare: dangerously-atomic-html@1.0.0
13 silly lifecycle dangerously-atomic-html@1.0.0~prepare: no script for prepare, continuing
14 verbose tar pack [ '/Users/josephditton/.npm/dangerously-atomic-html/1.0.0/package.tgz',
14 verbose tar pack   '/Users/josephditton/Documents/Atomic/dangerously-atomic-html' ]
15 verbose tarball /Users/josephditton/.npm/dangerously-atomic-html/1.0.0/package.tgz
16 verbose folder /Users/josephditton/Documents/Atomic/dangerously-atomic-html
17 verbose addLocalTarball adding from inside cache /Users/josephditton/.npm/dangerously-atomic-html/1.0.0/package.tgz
18 verbose correctMkdir /Users/josephditton/.npm correctMkdir not in flight; initializing
19 silly cache afterAdd dangerously-atomic-html@1.0.0
20 verbose afterAdd /Users/josephditton/.npm/dangerously-atomic-html/1.0.0/package/package.json not in flight; writing
21 verbose correctMkdir /Users/josephditton/.npm correctMkdir not in flight; initializing
22 verbose afterAdd /Users/josephditton/.npm/dangerously-atomic-html/1.0.0/package/package.json written
23 silly publish { name: 'dangerously-atomic-html',
23 silly publish   version: '1.0.0',
23 silly publish   description: '## Introduction Sometimes you can\'t avoid having to do dangerouslySetInnerHtml in your React apps. But, once you have dangerously set some html in react you lose all control of that part of the DOM. Dangerously Atomic Html takes html and dynamically turns it into react components at run time. This is useful for working with output from tools like tinyMCE or when looking at search results from elastic search.',
23 silly publish   main: 'build/build.js',
23 silly publish   scripts:
23 silly publish    { test: 'node scripts/test.js --env=jsdom',
23 silly publish      build: 'babel index.js --out-file build/build.js --presets=react-app' },
23 silly publish   dependencies: { lodash: '^4.17.4' },
23 silly publish   peerDependencies: { react: '>=14.0.0' },
23 silly publish   devDependencies:
23 silly publish    { autoprefixer: '6.7.2',
23 silly publish      'babel-cli': '^6.24.1',
23 silly publish      'babel-core': '6.22.1',
23 silly publish      'babel-eslint': '7.1.1',
23 silly publish      'babel-jest': '18.0.0',
23 silly publish      'babel-loader': '6.2.10',
23 silly publish      'babel-preset-react-app': '^2.2.0',
23 silly publish      'babel-runtime': '^6.20.0',
23 silly publish      'case-sensitive-paths-webpack-plugin': '1.1.4',
23 silly publish      chalk: '1.1.3',
23 silly publish      'connect-history-api-fallback': '1.3.0',
23 silly publish      'cross-spawn': '4.0.2',
23 silly publish      'css-loader': '0.26.1',
23 silly publish      'detect-port': '1.1.0',
23 silly publish      dotenv: '2.0.0',
23 silly publish      eslint: '3.16.1',
23 silly publish      'eslint-config-react-app': '^0.6.2',
23 silly publish      'eslint-loader': '1.6.0',
23 silly publish      'eslint-plugin-flowtype': '2.21.0',
23 silly publish      'eslint-plugin-import': '2.0.1',
23 silly publish      'eslint-plugin-jsx-a11y': '4.0.0',
23 silly publish      'eslint-plugin-react': '6.4.1',
23 silly publish      'extract-text-webpack-plugin': '1.0.1',
23 silly publish      'file-loader': '0.10.0',
23 silly publish      'fs-extra': '0.30.0',
23 silly publish      'html-webpack-plugin': '2.24.0',
23 silly publish      'http-proxy-middleware': '0.17.3',
23 silly publish      jest: '18.1.0',
23 silly publish      'json-loader': '0.5.4',
23 silly publish      'object-assign': '4.1.1',
23 silly publish      'postcss-loader': '1.2.2',
23 silly publish      promise: '7.1.1',
23 silly publish      react: '^15.5.4',
23 silly publish      'react-dev-utils': '^0.5.2',
23 silly publish      'react-dom': '^15.5.4',
23 silly publish      'style-loader': '0.13.1',
23 silly publish      'url-loader': '0.5.7',
23 silly publish      webpack: '1.14.0',
23 silly publish      'webpack-dev-server': '1.16.2',
23 silly publish      'webpack-manifest-plugin': '1.1.0',
23 silly publish      'whatwg-fetch': '2.0.2' },
23 silly publish   jest:
23 silly publish    { collectCoverageFrom: [ 'src/**/*.{js,jsx}' ],
23 silly publish      setupFiles: [ '<rootDir>/config/polyfills.js' ],
23 silly publish      testPathIgnorePatterns: [ '<rootDir>[/\\\\](build|docs|node_modules|scripts)[/\\\\]' ],
23 silly publish      testEnvironment: 'node',
23 silly publish      testURL: 'http://localhost',
23 silly publish      transform:
23 silly publish       { '^.+\.(js|jsx)$': '<rootDir>/node_modules/babel-jest',
23 silly publish         '^.+\.css$': '<rootDir>/config/jest/cssTransform.js',
23 silly publish         '^(?!.*\.(js|jsx|css|json)$)': '<rootDir>/config/jest/fileTransform.js' },
23 silly publish      transformIgnorePatterns: [ '[/\\\\]node_modules[/\\\\].+\\.(js|jsx)$' ],
23 silly publish      moduleNameMapper: { '^react-native$': 'react-native-web' } },
23 silly publish   babel: { presets: [ 'react-app' ] },
23 silly publish   author: '',
23 silly publish   license: 'MIT',
23 silly publish   readme: '# dangerously-atomic-html\n\n## Introduction\nSometimes you can\'t avoid having to do dangerouslySetInnerHtml in your React apps. But, once you have dangerously set some html in react you lose all control of that part of the DOM. Dangerously Atomic Html takes html and dynamically turns it into react components at run time. This is useful for working with output from tools like tinyMCE or when looking at search results from elastic search.\n\n## Installation\ndangerously-atomic-html has a peer dependency of `"react": ">=14.0.0`\n\nTo install run `yarn add dangerously-atomic-html`\n\n## Basic Usage\n```javascript\nimport React from \'react\';\nimport dangerouslyAtomicHtml from \'dangerously-atomic-html\';\n\nclass Example extends React.Component {\n  render(){\n    const html = \'<h1 class="title">Hello, world!</h1>\';\n    return dangerouslyAtomicHtml(html);\n    /* the same as doing\n    return (\n      <div>\n        <h1 className="title">Hello, world</h1>\n      </div>\n    );\n    */\n  }\n}\n\n```\nTake note that dangerouslyAtomicHtml wraps the top in a div. This allow the transformation of html that has multiple elements at the same level, for example `<div>I am a div</div><div>I am a sibling div</div>`.\n\n## Advanced Usage\ndangerouslyAtomicHtml accepts a second argument which is function that is a visitor for each DOM node in the html. Those who have worked with babel or eslint plugins will be familiar with this pattern. The visitor function accepts an html node as the only argument and returns an object that describes how you want to transform that node. For example:\n```javascript\nfunction visitor(domNode){\n  if(domNode.nodeName === \'H1\'){ // text nodes will have a node name of `#text`\n    return {\n      type: \'node\', // one of [\'node\', \'text], use node when returning anything that is not raw text.\n      Component: domNode.nodeName, // can be a string that is the the name of an html node or a react component,\n      props: { className: \'custom-class-name\' }\n    }\n  }\n}\n\ndangerouslyAtomicHtml(\'<h1>Welcome!</h1>\', visitor);\n\n```\nthis example adds the class "custom-class-name" to all the h1 tags in the document.\n\nYou can also return a react component from the visitor, for example:\n```javascript\nconst html = (\n`\n<ul>\n<li>Item 1</li>\n<li>Item 2</li>\n<li>Item 3</li>\n<li>Item 4</li>\n</ul>\n`\n);\n\nclass CustomLi extends React.Component {\n  render(){\n    // return some custom react stuff\n  }\n}\n\nfunction visitor(domNode){\n  if(domNode.nodeName === \'LI\'){\n    return {\n      type: \'node\',\n      Component: CustomLi,\n      // the props value is optional\n    }\n  }\n}\n\ndangerouslyAtomicHtml(html, visitor);\n\n/* this would be the same as if you wrote in react\n<ul>\n  <CustomLi>Item 1</CustomLi>\n  <CustomLi>Item 2</CustomLi>\n  <CustomLi>Item 3</CustomLi>\n  <CustomLi>Item 4</CustomLi>\n</ul>\n*/\n\n```\nNote that if you return a react component for a node that has children then it is up to your react component to handle rendering the children via `this.props.children`.\n\nWe also provided a function that will give a hash of the attributes preset on the dom node but in the react format. It takes the node as the only argument. For example:\n```javascript\nimport dangerouslyAtomicHtml, { reactifyAttributes } from \'dangerously-atomic-html\'\n\nfunction visitor(domNode){\n  if(domNode.nodeName === \'LI\'){\n    return {\n      type: \'node\',\n      Component: CustomLi,\n      props: reactifyAttributes(domNode)\n    }\n  }\n}\n```\n\nThis is useful when you want to keep all of the current attributes on a node but maybe modify one of them.\n## Gotchas\n\n* If a dom node has an onclick attribute (or any other event) then dangerouslyAtomicHtml will throw an error. Event attributes have no meaning when going from html to react. If you suspect that the html you will be transforming has event attributes in it then you will need to have a visitor function that handles those nodes.\n* Try to avoid traversing a node\'s tree in your visitor. Each node has direct access to its parent node. For example instead of having a visitor for a table tag then checking to see if one of its rows has some property, have a visitor on the row and check to see if the parent has some property.\n\n## Other Ideas of How to Use\n* Manipulating text of text nodes. Maybe you have have a comment box that uses tinyMCE and you want to add a link to another user\'s page when they are mentioned in a comment via @userName. You could find that in a text node and instead render a react component that links you to the users page.\n* Templating or theming user created content.\n\n## The Future\n* Add support for aria tags\n* Transform inline styles to react inline styles\n\n## Contributing\nFeel free to submit pull requests and we will look at them as soon as we can.\n',
23 silly publish   readmeFilename: 'README.md',
23 silly publish   gitHead: '64afa9d37660c45d779420e57c5cc85977cd858c',
23 silly publish   _id: 'dangerously-atomic-html@1.0.0',
23 silly publish   _shasum: '99afca75147576d48dafad79503f942d11effe4a',
23 silly publish   _from: '.' }
24 info lifecycle dangerously-atomic-html@1.0.0~prepublishOnly: dangerously-atomic-html@1.0.0
25 silly lifecycle dangerously-atomic-html@1.0.0~prepublishOnly: no script for prepublishOnly, continuing
26 verbose getPublishConfig undefined
27 silly mapToRegistry name dangerously-atomic-html
28 silly mapToRegistry using default registry
29 silly mapToRegistry registry https://registry.npmjs.org/
30 silly mapToRegistry data Result {
30 silly mapToRegistry   raw: 'dangerously-atomic-html',
30 silly mapToRegistry   scope: null,
30 silly mapToRegistry   escapedName: 'dangerously-atomic-html',
30 silly mapToRegistry   name: 'dangerously-atomic-html',
30 silly mapToRegistry   rawSpec: '',
30 silly mapToRegistry   spec: 'latest',
30 silly mapToRegistry   type: 'tag' }
31 silly mapToRegistry uri https://registry.npmjs.org/dangerously-atomic-html
32 verbose publish registryBase https://registry.npmjs.org/
33 silly publish uploading /Users/josephditton/.npm/dangerously-atomic-html/1.0.0/package.tgz
34 verbose request uri https://registry.npmjs.org/dangerously-atomic-html
35 verbose request sending authorization for write operation
36 info attempt registry request try #1 at 4:54:34 PM
37 verbose request using bearer token for auth
38 verbose request id 17cb913c04e4c25f
39 http request PUT https://registry.npmjs.org/dangerously-atomic-html
40 http 403 https://registry.npmjs.org/dangerously-atomic-html
41 verbose headers { 'content-type': 'application/json',
41 verbose headers   'cache-control': 'max-age=300',
41 verbose headers   'content-length': '95',
41 verbose headers   'accept-ranges': 'bytes',
41 verbose headers   date: 'Thu, 18 May 2017 22:54:37 GMT',
41 verbose headers   via: '1.1 varnish',
41 verbose headers   connection: 'keep-alive',
41 verbose headers   'x-served-by': 'cache-den6026-DEN',
41 verbose headers   'x-cache': 'MISS',
41 verbose headers   'x-cache-hits': '0',
41 verbose headers   'x-timer': 'S1495148076.359359,VS0,VE1074',
41 verbose headers   vary: 'Accept-Encoding' }
42 verbose request invalidating /Users/josephditton/.npm/registry.npmjs.org/dangerously-atomic-html on PUT
43 error publish Failed PUT 403
44 verbose stack Error: "You cannot publish over the previously published version 1.0.0." : dangerously-atomic-html
44 verbose stack     at makeError (/Users/josephditton/.nvm/versions/node/v7.5.0/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:304:12)
44 verbose stack     at CachingRegistryClient.<anonymous> (/Users/josephditton/.nvm/versions/node/v7.5.0/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:292:14)
44 verbose stack     at Request._callback (/Users/josephditton/.nvm/versions/node/v7.5.0/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:212:14)
44 verbose stack     at Request.self.callback (/Users/josephditton/.nvm/versions/node/v7.5.0/lib/node_modules/npm/node_modules/request/request.js:186:22)
44 verbose stack     at emitTwo (events.js:106:13)
44 verbose stack     at Request.emit (events.js:192:7)
44 verbose stack     at Request.<anonymous> (/Users/josephditton/.nvm/versions/node/v7.5.0/lib/node_modules/npm/node_modules/request/request.js:1081:10)
44 verbose stack     at emitOne (events.js:96:13)
44 verbose stack     at Request.emit (events.js:189:7)
44 verbose stack     at IncomingMessage.<anonymous> (/Users/josephditton/.nvm/versions/node/v7.5.0/lib/node_modules/npm/node_modules/request/request.js:1001:12)
45 verbose statusCode 403
46 verbose pkgid dangerously-atomic-html
47 verbose cwd /Users/josephditton/Documents/Atomic/dangerously-atomic-html
48 error Darwin 16.5.0
49 error argv "/Users/josephditton/.nvm/versions/node/v7.5.0/bin/node" "/Users/josephditton/.nvm/versions/node/v7.5.0/bin/npm" "publish"
50 error node v7.5.0
51 error npm  v4.1.2
52 error code E403
53 error "You cannot publish over the previously published version 1.0.0." : dangerously-atomic-html
54 error If you need help, you may report this error at:
54 error     <https://github.com/npm/npm/issues>
55 verbose exit [ 1, true ]
